install.packages(c("slidify","ggplot2","devtools"))
install.packages("slidify")
library(ggplot2)
search()
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
Swirl()
library(swirl)
Swirl()
swirl()
x <- c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z),100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.n(x) & x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0
x[0]
x[0]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2(11,2,NA)
vect2<- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vet2)
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dmi(my_vector)<-c(4,5)
dim(my_vector)<-c(4,5)
play()
attributes(my_vector)
nxt()
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
colnames(my_data,cnames)
colnames(cnames,my_data)
?colnames
colnames(my_data) <- cnames
my_data
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_list <- sapply(flags,class)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(c(3,4,5,5,5,6,6), unique)
unique_vals<-lapply(flags, unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
exit
exit()
qui()
quit()
x <- 1:20
use <- x >n
use <- x > 12
use
x[use]
cube <- function(x, n) {
x^3
}
cube(3)
cube <- function(x, n) {
x^3
}
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
setwd("C:/Users/Florian/Dropbox/Z - ML/RPro-Week2")
x <- read.csv("/specdata")
x <- read.csv("/specdata/*.csv")
?read
read?
